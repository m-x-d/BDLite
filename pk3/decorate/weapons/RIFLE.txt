// Ammunition for bullet weapons
actor RifleAmmo : Ammo replaces Clip
{
    Game Doom
    SpawnID 11
    Inventory.PickupMessage "Picked up a Magazine."
    Inventory.Amount 10
    Inventory.MaxAmount 300
    Ammo.BackpackAmount 10
    Ammo.BackpackMaxAmount 600
    Inventory.Icon "CLIPA0"
    States
    {
    Spawn:
        CLIP A -1
        Stop
    }
}

// Large ammunition for bullet weapons
actor RifleAmmoBox : RifleAmmo replaces Clipbox
{
    Game Doom
    SpawnID 139
    Inventory.PickupMessage "Picked up a box of rifle ammunition."
    Inventory.Amount 100
    States
    {
    Spawn:
        AMMO A -1
        Stop
    }
}

actor BDRifle : BDLiteWeapon replaces Pistol
{
    Weapon.AmmoGive2 10
    Weapon.SlotNumber 2
    Weapon.SelectionOrder 4500
    Weapon.AmmoType1 "RifleAmmoLoaded"
    Weapon.AmmoType2 "RifleAmmo"
    Obituary "%o was shot down by %k's assault rifle."
    AttackSound "None"
    Inventory.PickupSound "weapons/rifle/clip"
    Inventory.PickupMessage "You got the Assault Rifle!"
    XScale 1.0
    YScale 0.7
    States
    {
    Spawn:
        RIFL A -1
        Stop
        
    Ready:
        TNT1 A 0 A_PlaySound("weapons/rifle/clip")
        RIF1 D 0 A_JumpIfInventory("RifleAmmoLoaded", 21, "ReadyAnimate") //mxd. Show proper sprite when selecting...
        RIF2 D 0 A_JumpIfInventory("RifleAmmoLoaded", 11, "ReadyAnimate")
        RIF3 D 0 A_JumpIfInventory("RifleAmmoLoaded", 1,  "ReadyAnimate")
        RIF4 D 0
    ReadyAnimate:
        "####" D 1 offset(-10, 46)
        "####" D 1 offset(-5, 38)
        "####" D 1 offset(-2, 34)
    ReadyLoop:
        TNT1 A 0 A_JumpIfInventory("Zoomed", 1, "ReadyLoopZoomed") //mxd
        //This is a swanky unnecessary bit of code to power the indicator on top of the gun - select our sprite name based on the amount of ammo that's loaded. Same happens in the Fire state.
        RIF1 D 0 A_JumpIfInventory("RifleAmmoLoaded", 21, "ReadyLoop2")
        RIF2 D 0 A_JumpIfInventory("RifleAmmoLoaded", 11, "ReadyLoop2")
        RIF3 D 0 A_JumpIfInventory("RifleAmmoLoaded", 1,  "ReadyLoop2")
        RIF4 D 0
        goto ReadyLoop2
        
    ReadyLoopZoomed:
        //mxd. Pick a proper zoom sprite...
        RFZ1 D 0 A_JumpIfInventory("RifleAmmoLoaded", 22, "ReadyLoop2")
        RFZ2 D 0 A_JumpIfInventory("RifleAmmoLoaded", 12, "ReadyLoop2")
        RFZ3 D 0 A_JumpIfInventory("RifleAmmoLoaded", 2,  "ReadyLoop2")
        RFZ4 D 0
    ReadyLoop2:
        "####" D 1 
        {
            if (CountInv("Zoomed") > 0)
            {
                A_WeaponReady(WRF_ALLOWRELOAD | WRF_ALLOWUSER1 | WRF_ALLOWUSER2 | WRF_NOBOB);
            }
            else
            {
                A_WeaponReady(WRF_ALLOWRELOAD | WRF_ALLOWUSER1 | WRF_ALLOWUSER2);
            }
        }
        loop

    Deselect:
        "####" B 0 A_JumpIf(!CountInv("Zoomed"), "Deselect2")
        TNT1 A 0
        {
            A_ZoomFactor(1.0); //mxd. Zoom out when deselecting
            A_SetCrosshair(0); //mxd. Switch to default crosshair...
            A_TakeInventory("Zoomed", 1);
        }
        RIF1 B 0 A_JumpIfInventory("RifleAmmoLoaded", 21, "Deselect2")
        RIF2 B 0 A_JumpIfInventory("RifleAmmoLoaded", 11, "Deselect2")
        RIF3 B 0 A_JumpIfInventory("RifleAmmoLoaded", 1,  "Deselect2")
        RIF4 B 0
    Deselect2:
        "####" B 1 offset(-2, 34) //mxd. Was RIF4. Show proper sprite when deselecting...
        "####" B 1 offset(-5, 38)
        "####" B 1 offset(-10, 46)
        TNT1 AAAAAAAAAAAAAAAAAA 0 A_Lower
        TNT1 A 1
        wait

    Fire:
        TNT1 A 0 A_JumpIfInventory("Zoomed", 1, "FireZoomed")
        //These ones require +1 compared to the ready ones, so that the player sees the indicator just before firing
        RIF1 D 0 A_JumpIfInventory("RifleAmmoLoaded", 22, "FireAnimate")
        RIF2 D 0 A_JumpIfInventory("RifleAmmoLoaded", 12, "FireAnimate")
        RIF3 D 0 A_JumpIfInventory("RifleAmmoLoaded", 2,  "FireAnimate")
        RIF4 D 0
        goto FireAnimate

    FireZoomed:
        //mxd. Pick a proper zoom sprite...
        RFZ1 D 0 A_JumpIfInventory("RifleAmmoLoaded", 22, "FireAnimate")
        RFZ2 D 0 A_JumpIfInventory("RifleAmmoLoaded", 12, "FireAnimate")
        RFZ3 D 0 A_JumpIfInventory("RifleAmmoLoaded", 2,  "FireAnimate")
        RFZ4 D 0
    FireAnimate:
        "####" A 0 A_JumpIfInventory("RifleAmmoLoaded", 1, 1)
        goto Reload
        "####" A 0 
        {
            A_PlaySound("weapons/rifle/fire");
            if (CountInv("RifleAmmoLoaded") < 12) //mxd
            {
                A_PlaySound("weapons/rifle/dryfire", CHAN_AUTO);
            }
        }
        "####" A 1 A_AlertMonsters
        "####" A 0 A_SpawnItemEx("PlayerMuzzle1", 30, 5, 30)
        "####" B 1 A_FireBullets(0, 0, 1, 9, "HitPuff")
        "####" A 0 A_FireCustomMissile("Tracer", 0, 0, 0, -12, 0, random(-1, 1))
        "####" A 0 A_SetPitch(-1.3 + pitch)
        "####" A 0 A_Takeinventory("RifleAmmoLoaded", 1)
        "####" A 0 A_SetPitch(0.6 + pitch)
        "####" C 1 A_SpawnItemEx("BulletCasing", 17, 3, 35, 0, random(3, 6), random(3, 7))
        "####" D 1 A_SetPitch(0.5 + pitch)
        "####" A 0 A_Refire
        goto ReadyLoop
        
    Reload:
        "####" A 0 A_JumpIfInventory("RifleAmmoLoaded", 0, "ReadyLoop")
        "####" A 0 A_JumpIfInventory("RifleAmmo", 1, "ReloadAnimate")
        "####" D 8 A_PlaySound("weapons/empty")
        goto ReadyLoop

    ReloadAnimate:
        TNT1 A 0
        { 
            A_ZoomFactor(1.0); //mxd. Zoom out first
            A_SetCrosshair(0); //mxd. Switch to default crosshair...
            A_TakeInventory("Zoomed", 1);
            A_PlaySound("weapons/rifle/reload");
        }
        RIFR ABCDE 1 A_WeaponReady(WRF_ALLOWUSER1 | WRF_ALLOWUSER2 | WRF_NOFIRE)
        RIFR F 1 A_SpawnItemEx("EmptyClip", 17, 2, 35, 0, random(3, 6), 4)
        RIFR G 8
        RIFR HIKL 1
        RIFR M 3
        RIFR NOPQRST 1 A_WeaponReady(WRF_ALLOWUSER1 | WRF_ALLOWUSER2 | WRF_NOFIRE)
    ReloadAmmo:
        TNT1 A 0 A_JumpIfInventory("RifleAmmoLoaded", 0, "ReadyLoop")
        TNT1 A 0 A_JumpIfInventory("RifleAmmo", 1, 1)
        goto ReadyLoop
        TNT1 A 0 A_Giveinventory("RifleAmmoLoaded", 1)
        TNT1 A 0 A_Takeinventory("RifleAmmo", 1)
        goto ReloadAmmo
    
    AltFire: //mxd. Toggle iron sights
        "----" A 0 A_JumpIfInventory("Zoomed", 1, "ZoomOut")
        "----" A 0 A_ZoomFactor(2.0)
        // Lower regular sprite...
        "----" A 1 offset(0, 44)
        "----" A 1 offset(0, 58)
        "----" A 1 offset(0, 67)
        "----" A 1 offset(0, 82)
        // Pick zoomed sprite...
        RFZ1 D 0 A_JumpIfInventory("RifleAmmoLoaded", 22, "ZoomInAnimate")
        RFZ2 D 0 A_JumpIfInventory("RifleAmmoLoaded", 12, "ZoomInAnimate")
        RFZ3 D 0 A_JumpIfInventory("RifleAmmoLoaded", 2,  "ZoomInAnimate")
        RFZ4 D 0
    ZoomInAnimate:
        "----" A 0 A_SetCrosshair(99) // Switch to invisible crosshair...
        // Raise zoomed sprite...
        "----" A 1 offset(0, 92)
        "----" A 1 offset(0, 74)
        "----" A 1 offset(0, 56)
        "----" A 1 offset(0, 42)
        "----" A 0 offset(0, 32)
        "----" A 0 A_GiveInventory("Zoomed", 1)
        goto ReadyLoop
        
    ZoomOut: //mxd
        "----" A 0 A_ZoomFactor(1.0)
        // Lower zoomed sprite...
        "----" A 1 offset(0, 42)
        "----" A 1 offset(0, 56)
        "----" A 1 offset(0, 74)
        "----" A 1 offset(0, 92)
        // Pick regular sprite...
        RIF1 D 0 A_JumpIfInventory("RifleAmmoLoaded", 22, "ZoomOutAnimate")
        RIF2 D 0 A_JumpIfInventory("RifleAmmoLoaded", 12, "ZoomOutAnimate")
        RIF3 D 0 A_JumpIfInventory("RifleAmmoLoaded", 2,  "ZoomOutAnimate")
        RIF4 D 0
    ZoomOutAnimate:
        "----" A 0 A_SetCrosshair(0) // Switch to default crosshair...
        // Raise normal sprite...
        "----" A 1 offset(0, 82)
        "----" A 1 offset(0, 67)
        "----" A 1 offset(0, 58)
        "----" A 1 offset(0, 44)
        "----" A 0 offset(0, 32)
        "----" A 0 A_TakeInventory("Zoomed", 1)
        goto ReadyLoop
    
    User1: //mxd. Zoom out before kicking...
        TNT1 A 0
        {
            A_ZoomFactor(1.0);
            A_TakeInventory("Zoomed", 1);
            A_SetCrosshair(0); // Switch to default crosshair...
        }
        goto super::User1
        
    User2: //mxd. Zoom out before throwing grenades...
        TNT1 A 0
        {
            A_ZoomFactor(1.0);
            A_TakeInventory("Zoomed", 1);
            A_SetCrosshair(0); // Switch to default crosshair...
        }
        goto super::User2
    }
}

// Represents ammo loaded into the BdRifle
actor RifleAmmoLoaded : Ammo
{
    Inventory.Amount 0
    Inventory.MaxAmount 31
    Ammo.BackpackAmount 0
    Ammo.BackpackMaxAmount 31
    Inventory.Icon "RIFLA0"
}

//mxd. Zoom state indicator
actor Zoomed : Inventory
{
    Inventory.MaxAmount 1
}